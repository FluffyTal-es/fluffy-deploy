name: "deploy"

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Which repository to deploy'
        required: true
        default: 'all' 
        type: choice
        options:
        - all
        - fluffy-configs
        - fluffy-dev-tools
        - fluffy-nonpc
      dev:
        description: 'Deploy to development?'
        required: true
        default: 'yes' 
        type: choice
        options:
        - yes
        - no

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
   
    steps:
    - name: "Find repos to deploy"
      id: set-matrix
      run: |
        [ "${{ github.event.inputs.repo }}" -eq all ] && matrix=all || matrix=${{ github.event.inputs.repo }}            
        echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

  clone:
    needs: prepare
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    
    steps:
      - name: "Clone config Repository"
        uses: actions/checkout@master
        with:
          repository: FluffyTal-es/${{ matrix }}
          token: ${{ secrets.DEPLOY_TOKEN }}
          path: '.'
      
      - name: "Move configs to right path"
        if:  ${{ matrix == 'fluffy-configs' }}
        run: |
          mkdir -p resources/[configs]
          mv config/* resources/[configs]/
          rm -r config

      - name: "Clone dev-tools Repository"
        if:  ${{ matrix == '/fluffy-dev-tools' }}
        uses: actions/checkout@master
        with:
          repository: FluffyTal-es/fluffy-dev-tools
          token: ${{ secrets.DEPLOY_TOKEN }}
          path: 'resources/[dev]/fluffy-dev-tools'

      - uses: actions/upload-artifact@v2
        with:
          name: fluffytales
          path: '.'

  build:
    needs: [clone]
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: fluffytales

      - name: "Deploy configs on server"
        env:
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
          local_dir: "."
          remote_dir: "/root/fivem_resources"
        run: |
          mkdir ~/.ssh
          echo "$remote_key" > ~/.ssh/id_github
          chmod 600 ~/.ssh/id_github
          rsync -avzrI -e "ssh -p ${remote_port} -i ~/.ssh/id_github -o StrictHostKeyChecking=no" ${local_dir} ${remote_user}@${remote_host}:${remote_dir}
          rm ~/.ssh/id_github
