name: "discord"

on:
  workflow_run:
    workflows:
      - deploy
    types: 
      - completed
jobs:
  get-status:
    outputs:
      status: ${{ steps.workflow-status.outputs.status }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: get-artifact-id
        with:
          github-token: ${{ secrets.DEPLOY_TOKEN }}
          result-encoding: string
          script: |
            const result = await github.rest.actions.listWorkflowRunArtifacts({
              owner: '${{github.repository_owner}}',
              repo: '${{github.event.repository.name}}',
              run_id: ${{github.event.workflow_run.id}}
            })
            return result.data.artifacts.filter(a => a.name === 'status')[0].archive_download_url
      - name: Get workflow status
        id: workflow-status
        run: |
          echo "${{steps.get-artifact-id.outputs.result}}"
          curl -L -H "Authorization: token ${{github.token}}" \
            -H "Accept: application/vnd.github.v3+json" \
            -o status.zip \
            ${{steps.get-artifact-id.outputs.result}}
          unzip status.zip
          JSON=$(cat ./status.json)
          echo "::set-output name=status::${JSON//'%'/'%25'}"
  on-success:
    needs: [get-status]
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: "Hurray!"
        run: |
          curl -X POST https://discord.com/api/webhooks/${{ secrets.WEBHOOK_ID }}/${{ secrets.WEBHOOK_TOKEN }} \
            -H 'Content-Type: application/json' \
            -d '{
              "content": null,
              "embeds": [
                {
                  "title": ":+1: Hurray!",
                  "description": "An update for **${{ fromJSON(needs.get-status.outputs.status).repo == 'all' && 'all Resources' ||  fromJSON(needs.get-status.outputs.status).repo }}** dropped on the **${{ fromJSON(needs.get-status.outputs.status).live == 'yes' && 'Live' || 'Dev' }} Server**!\n\n:package:  [${{ fromJSON(needs.get-status.outputs.status).repo }}](https://github.com/FluffyTal-es/${{ fromJSON(needs.get-status.outputs.status).repo != 'all' && fromJSON(needs.get-status.outputs.status).repo || '' }})\n\n:link: ${{ github.event.workflow_run.html_url}}\n\nSee you next time! :kissing_heart:",
                  "color": 65402,
                  "footer": {
                    "text": "Deployed"
                  },
                  "timestamp": "${{ github.event.workflow_run.updated_at }}"
                }
              ],
              "username": "FluffyTales GitBot",
              "avatar_url": "https://cdn.fluffytal.es/servericon.png"
            }'
  
  on-failure:
    needs: [get-status]
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: "Nay!"
        run: |
          curl -X POST https://discord.com/api/webhooks/${{ secrets.WEBHOOK_ID }}/${{ secrets.WEBHOOK_TOKEN }} \
            -H 'Content-Type: application/json' \
            -d '{
              "content": null,
              "embeds": [
                {
                  "title": ":-1: Nay!",
                  "description": "Nay Nay Nay! That ship has sunk somewhere in between! Deploy for **${{ fromJSON(needs.get-status.outputs.status).repo == 'all' && 'all Resources' ||  fromJSON(needs.get-status.outputs.status).repo }}** failed on the **${{ fromJSON(needs.get-status.outputs.status).live == 'yes' && 'Live' || 'Dev' }} Server**.\n\n:package: [${{ fromJSON(needs.get-status.outputs.status).repo }}](https://github.com/FluffyTal-es/${{ fromJSON(needs.get-status.outputs.status).repo != 'all' && fromJSON(needs.get-status.outputs.status).repo || '' }})\n\n:link: ${{ github.event.workflow_run.html_url}}\n\nSee you next time! :kissing_heart:",
                  "color": 16711782,
                  "footer": {
                    "text": "Failed"
                  },
                  "timestamp": "${{ github.event.workflow_run.updated_at }}"
                }
              ],
              "username": "FluffyTales GitBot",
              "avatar_url": "https://cdn.fluffytal.es/servericon.png"
            }'
